#record(dfanout, $(LENSBASE):LENS:COM:_GO_SLOW) {
#  field(OMSL, "closed_loop")
#  field(SELM, "All")
#  field(DOL, "$(LENSBASE):LENS:COM:_GO_SEL")
#  field(OUTA, "$(LENSBASE):LENS:01:_IN.A PP MS")
#  field(OUTB, "$(LENSBASE):LENS:02:_IN.A PP MS")
#  field(OUTC, "$(LENSBASE):LENS:03:_IN.A PP MS")
#  field(OUTD, "$(LENSBASE):LENS:04:_IN.A PP MS")
#  field(FLNK, "$(LENSBASE):LENS:COM:_SLOWP")
#}
#
#record(dfanout, $(LENSBASE):LENS:COM:_GO_SLOW3) {
#  field(OMSL, "closed_loop")
#  field(SELM, "All")
#  field(DOL, "$(LENSBASE):LENS:COM:_GO_SEL")
#  field(OUTA, "$(LENSBASE):LENS:01:_OUT.A PP MS")
#  field(OUTB, "$(LENSBASE):LENS:02:_OUT.A PP MS")
#  field(OUTC, "$(LENSBASE):LENS:03:_OUT.A PP MS")
#  field(OUTD, "$(LENSBASE):LENS:04:_OUT.A PP MS")
#}
#
#record(dfanout, $(LENSBASE):LENS:COM:_GO_FAN) {
#  field(OMSL, "closed_loop")
#  field(SELM, "All")
#  field(DOL, "$(LENSBASE):LENS:COM:_GO_SEL")
#  field(OUTA, "$(LENSBASE):LENS:01:IN_OUT.A PP MS")
#  field(OUTB, "$(LENSBASE):LENS:02:IN_OUT.A PP MS")
#  field(OUTC, "$(LENSBASE):LENS:03:IN_OUT.A PP MS")
#  field(OUTD, "$(LENSBASE):LENS:04:IN_OUT.A PP MS")
#  field(FLNK, "$(LENSBASE):LENS:COM:_FASTP")
#}
#
record(calc, $(LENSBASE):LENS:COM:STATE) {
  field(DESC, "Create bit vector of current lens system state")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:IS_IN CPP")
  field(INPB, "$(LENSBASE):LENS:02:IS_IN CPP")
  field(INPC, "$(LENSBASE):LENS:03:IS_IN CPP")
  field(INPD, "$(LENSBASE):LENS:04:IS_IN CPP")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:COM:ERROR) {
  field(DESC, "Create bit vector of current lens system error")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:IS_UNK CPP")
  field(INPB, "$(LENSBASE):LENS:02:IS_UNK CPP")
  field(INPC, "$(LENSBASE):LENS:03:IS_UNK CPP")
  field(INPD, "$(LENSBASE):LENS:04:IS_UNK CPP")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:COM:MOVING) {
  field(DESC, "Create bit vector of current att move")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:_MOVE CPP")
  field(INPB, "$(LENSBASE):LENS:02:_MOVE CPP")
  field(INPC, "$(LENSBASE):LENS:03:_MOVE CPP")
  field(INPD, "$(LENSBASE):LENS:04:_MOVE CPP")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:COM:STUCK) {
  field(DESC, "Create bit vector of current lens system stuck")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:_STUCK_C NPP")
  field(INPB, "$(LENSBASE):LENS:02:_STUCK_C NPP")
  field(INPC, "$(LENSBASE):LENS:03:_STUCK_C NPP")
  field(INPD, "$(LENSBASE):LENS:04:_STUCK_C NPP")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:COM:STUCKIN) {
  field(DESC, "Create bit vector of lens system stuckin")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:_STUCKIN_C NPP")
  field(INPB, "$(LENSBASE):LENS:02:_STUCKIN_C NPP")
  field(INPC, "$(LENSBASE):LENS:03:_STUCKIN_C NPP")
  field(INPD, "$(LENSBASE):LENS:04:_STUCKIN_C NPP")
  field(SCAN, "Passive")
  field(FLNK, "$(LENSBASE):LENS:COM:ALL_OUT_GO")
}

record(calc, $(LENSBASE):LENS:COM:STUCKOUT) {
  field(DESC, "Create bit vector of lens system stuckout")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:_STUCKOUT_C NPP")
  field(INPB, "$(LENSBASE):LENS:02:_STUCKOUT_C NPP")
  field(INPC, "$(LENSBASE):LENS:03:_STUCKOUT_C NPP")
  field(INPD, "$(LENSBASE):LENS:04:_STUCKOUT_C NPP")
  field(SCAN, "Passive")
  field(FLNK, "$(LENSBASE):LENS:COM:ALL_IN_GO")
}

record(calc, $(LENSBASE):LENS:COM:RADII) {
  field(DESC, "Create bit of lens system radii")
  field(PINI, "NO")
  field(CALC, "A|B|C|D")
  field(INPA, "$(LENSBASE):LENS:01:RADIUS NPP")
  field(INPB, "$(LENSBASE):LENS:02:RADIUS NPP")
  field(INPC, "$(LENSBASE):LENS:03:RADIUS NPP")
  field(INPD, "$(LENSBASE):LENS:04:RADIUS NPP")
  field(SCAN, "Passive")
}
