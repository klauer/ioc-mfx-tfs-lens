#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND

#record(mbbo, $(LENSBASE):LENS:$(LENSNUM):GO) {
#  field(DTYP, "Raw Soft Channel")
#  field(OUT,  "$(MVR):GO PP")
#  field(ZRVL, "0")
#  field(ZRST, "Unknown")
#  field(ZRSV, "MINOR")
#  field(ONVL, "1")
#  field(ONST, "IN")
#  field(ONSV, "NO_ALARM")
#  field(TWVL, "2")
#  field(TWST, "OUT")
#  field(TWSV, "NO_ALARM")
#  field(UNSV, "MAJOR")
#}
#
#

#record(ao, $(LENSBASE):LENS:$(LENSNUM):IN:GO) {
#  field(DTYP, "Raw Soft Channel")
#  field(OUT,  "$(MVR):$(IN_STATE):GO PP")
#  field(ZRVL, "0")
#  field(ZRST, "Unknown")
#  field(ZRSV, "MINOR")
#  field(ONVL, "1")
#  field(ONST, "IN")
#  field(ONSV, "NO_ALARM")
#  field(TWVL, "2")
#  field(TWST, "OUT")
#  field(TWSV, "NO_ALARM")
#  field(UNSV, "MAJOR")
#}



record(calc, $(LENSBASE):LENS:$(LENSNUM):_STATECALC)	{
  field(DESC, "Grab the state of lens $(LENSNUM)")
  field(PINI, "NO")
  field(CALC, "B=0?B:A+1")
  field(INPA, "$(LENS):$(IN_STATE) CPP")
  field(INPB, "$(LENS) CPP")
  field(SCAN, "Passive")
}

record(mbbi, $(LENSBASE):LENS:$(LENSNUM):STATE) {
  field(DESC, "Determine state of lens $(LENSNUM)")
  field(DTYP, "Raw Soft Channel")
  field(INP,  "$(MVR) CPP")
  field(ZRVL, "0")
  field(ZRST, "Unknown")
  field(ZRSV, "MINOR")
  field(ONVL, "1")
  field(ONST, "IN")
  field(ONSV, "NO_ALARM")
  field(TWVL, "2")
  field(TWST, "OUT")
  field(TWSV, "NO_ALARM")
  field(UNSV, "MAJOR")
}

#record(calcout, $(LENSBASE):LENS:$(LENSNUM):IN_OUT) {
#  field(B,    "$(LENSBIT)")
#  field(INPC, "$(LENSBASE):LENS:$(LENSNUM):STATE")
#  field(OUT,  "$(LENSBASE):LENS:$(LENSNUM):GO PP")
#  field(CALC, "C=(2-((A>>B)&1))?0:1")
#  field(OCAL, "2-((A>>B)&1)")
#  field(DOPT, "Use OCAL")
#  field(OOPT, "When Non-zero")
#}
#
#record(calcout, $(LENSBASE):LENS:$(LENSNUM):_IN) {
#  field(B,    "$(LENSBIT)")
#  field(INPC, "$(LENSBASE):LENS:$(LENSNUM):STATE")
#  field(OUT,  "$(LENSBASE):LENS:$(LENSNUM):GO PP")
#  field(CALC, "C=1?0:((A>>B)&1)")
#  field(DOPT, "Use CALC")
#  field(OOPT, "When Non-zero")
#}
#
#record(calcout, $(LENSBASE):LENS:$(LENSNUM):_OUT) {
#  field(B,    "$(LENSBIT)")
#  field(INPC, "$(LENSBASE):LENS:$(LENSNUM):STATE")
#  field(OUT,  "$(LENSBASE):LENS:$(LENSNUM):GO PP")
#  field(CALC, "C=2?1:((A>>B)&1)")
#  field(OCAL, "2")
#  field(DOPT, "Use OCAL")
#  field(OOPT, "When Zero")
#}

record(calc, $(LENSBASE):LENS:$(LENSNUM):IS_IN)	{
  field(DESC, "Grab the state of lens $(LENSNUM)")
  field(PINI, "NO")
  field(CALC, "A=1?1<<B:0")
  field(INPA, "$(LENSBASE):LENS:$(LENSNUM):STATE CPP")
  field(B,    "$(LENSBIT)")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:$(LENSNUM):IS_OUT)    {
  field(DESC, "Grab the state of lens $(LENSNUM)")
  field(PINI, "NO")
  field(CALC, "A=2?1<<B:0")
  field(INPA, "$(LENSBASE):LENS:$(LENSNUM):STATE CPP")
  field(B,    "$(LENSBIT)")
  field(SCAN, "Passive")
}

record(calc, $(LENSBASE):LENS:$(LENSNUM):IS_UNK)    {
  field(DESC, "Grab the state of lens $(LENSNUM)")
  field(PINI, "NO")
  field(CALC, "A=0?1<<B:0")
  field(INPA, "$(LENSBASE):LENS:$(LENSNUM):STATE CPP")
  field(B,    "$(LENSBIT)")
  field(SCAN, "Passive")
}


record(calc, $(LENSBASE):LENS:$(LENSNUM):_STUCK_C) {
  field(PINI, "NO")
  field(CALC, "A<<(2*B)")
  field(B,    "$(LENSBIT)")
  field(SCAN, "Passive")
  field(FLNK, "$(LENSBASE):LENS:COM:STUCK")
}


record(mbbo, $(LENSBASE):LENS:$(LENSNUM):IS_STUCK) {
  field(DESC, "Not stuck, stuck in, or stuck out")
  field(PINI, "YES")
  field(DOL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(LENSBASE):LENS:$(LENSNUM):_STUCK_C.A PP")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "Not Stuck")
  field(ONST, "Stuck In")
  field(TWST, "Stuck Out")
}
record(calc, $(LENSBASE):LENS:$(LENSNUM):_MOVE) {
  field(DESC, "Lens is moving")
  field(PINI, "NO")
  field(CALC, "A=0?1<<B:0")
  field(INPA, "$(MOT)$(DMOV) CPP")
  field(B,    "$(LENSBIT)")
  field(SCAN, "Passive")
}

#! Further lines contain data used by VisualDCT
#! View(90,4,0.4)
