record(bo, $(LOCATION):LENS:$(LENSID):STATE){
    field(DESC, "Check the state of lens")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask(BO_PORT $(INBIT) 0x1)")
    field(OMSL, "closed_loop")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DOL, "$(Y_MOT):$(IN_STATE) CPP")
    field(ZNAM, "Not in")
    field(ONAM, "In")
    field(FLNK, $(LOCATION):LENS:$(LENSID):FOCUS)
}


record(bo, $(LOCATION):LENS:$(LENSID):SAFE){
    field(DESC, "Unknown state of the lens")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask(BO_PORT $(SAFEBIT) 0x1)")
    field(OMSL, "closed_loop")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DOL, "$(LOCATION):LENS:$(LENSID):STATE_CALC CPP")
    field(ZNAM, "Not safe")
    field(ZSV, "MAJOR")
    field(ONAM, "Safe")
    field(OSV, "NO_ALARM")
}


record(bo, $(LOCATION):LENS:$(LENSID):INSERT) {
    field(DESC, "Put lens in the beam")
    field(DTYP, "Soft Channel")
    field(PINI, "YES")
    field(ZNAM, "NO")
    field(ONAM, "$(IN_STATE)")
    field(DISV, "1")  
    field(HIGH, "5")
    field(OUT,  "$(Y_MOT):$(IN_STATE):GO PP")
}


record(stringout, $(LOCATION):LENS:$(LENSID):IN_STATE) {
    field(DESC, "Name of the in state of the lens")
    field(PINI, "YES")
    field(SCAN, "Passive")    
    field(VAL, "$(IN_STATE)")
}


record(stringout, $(LOCATION):LENS:$(LENSID):Y_MOT) {
    field(DESC, "Name of the the Y motor")
    field(PINI, "YES")
    field(SCAN, "Passive")    
    field(VAL, "$(Y_MOT)")
}


record(calc, $(LOCATION):LENS:$(LENSID):STATE_CALC) {
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(INPA, "$(Y_MOT) CPP")
    field(CALC, "A>0?1:0")
}

record(bo, $(LOCATION):LENS:$(LENSID):REMOVE) {
    field(DESC, "Remove lens from the beam")
    field(PINI, "YES")
    field(ZNAM, "NO")
    field(ONAM, "OUT")
    field(HIGH, "5")
    field(OUT,  "$(Y_MOT):OUT:GO PP")
}

record(calc,$(LOCATION):LENS:$(LENSID):OUT) {
    field(DESC, "Whether Y motor is out")
    field(PINI, "YES")
    field(INPA, "$(Y_MOT):OUT CPP")
    field(CALC, "A>0?1:0")
}
